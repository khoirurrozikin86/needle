name: CI/CD Deploy via SSH

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Upload files to server
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_PRIVATE_KEY }}
          port: ${{ secrets.DEPLOY_PORT }}
          source: |
            ./*
            ./.env.example
          target: /home/deploy/build
          overwrite: true
          rm: true
          strip_components: 0
          exclude: |
            .git
            .github
            node_modules
            vendor

      - name: Run remote deploy steps
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_PRIVATE_KEY }}
          port: ${{ secrets.DEPLOY_PORT }}
          script: |
            set -euo pipefail
            APP_DIR=/var/www/laravel
            STAGE=/home/deploy/build

            sudo mkdir -p "$APP_DIR"
            sudo chown -R "$USER":"$USER" "$APP_DIR"

            rsync -a --delete --exclude=".git" --exclude=".github" --exclude="node_modules" --exclude="vendor" "$STAGE"/ "$APP_DIR"/

            cd "$APP_DIR"
            command -v composer >/dev/null || { curl -sS https://getcomposer.org/installer | php && sudo mv composer.phar /usr/local/bin/composer && sudo chmod +x /usr/local/bin/composer; }
            composer install --no-interaction --prefer-dist --optimize-autoloader --no-dev

            [ -f .env ] || cp .env.example .env || true
            php artisan key:generate || true
            php artisan migrate --force || true

            php artisan config:clear || true
            php artisan config:cache || true
            php artisan route:cache || true
            php artisan view:cache || true

            sudo chown -R www-data:www-data "$APP_DIR"
            sudo chmod -R 775 "$APP_DIR/storage" "$APP_DIR/bootstrap/cache"

            sudo systemctl reload php8.2-fpm || true
            sudo systemctl reload nginx || true
